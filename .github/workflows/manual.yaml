name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      ref1:
        description: 'Branch name, tag, or commit SHA #1'
        required: true
      ref2:
        description: 'Branch name, tag, or commit SHA #2'
        required: true

# The ref parameter in actions/checkout is flexible and can accept:
# Branch names (e.g., main)
# Tag names (e.g., v1.2.3)
# Full commit SHAs (e.g., a1b2c3d4)

jobs:

  build2:
    name: "Build ref ${{ matrix.ref }}"
    strategy:
      matrix:
        include:
          - ref: ${{ github.event.inputs.ref1 }}
          - ref: ${{ github.event.inputs.ref2 }}

    uses: ./.github/workflows/build-ubuntu.yaml
    with:
      ref: ${{ matrix.ref }}
      target: "all"

  integration_tests_ubuntu:
    name: IT [${{ matrix.cluster }}/${{ matrix.mode }}/${{ matrix.consistency }}]
    strategy:
      matrix:
        mode: ["fsm_mode"]
        cluster: ["multi"]
        consistency: ["strong_consistency"]
      fail-fast: false
    runs-on: ubuntu-latest
    needs: build2
    env:
        RUN_UID: ${{ matrix.cluster }}_${{ matrix.mode }}_${{ matrix.consistency }}
    steps:

      - name: Checkout repositories
        strategy:
          matrix:
        repo:
          - { path: repo1, ref: ${{ github.event.inputs.ref1 }} }
          - { path: repo2, ref: ${{ github.event.inputs.ref2 }} }
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.repo.ref }}
          path: ${{ matrix.repo.path }}
          fetch-depth: 0

      - name: Get repo1 commit SHA
        working-directory: repo1
        id: get_sha1
        run: echo "sha1=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Get repo2 commit SHA
        working-directory: repo2
        id: get_sha2
        run: echo "sha2=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Download artifacts
        strategy:
          matrix:
        repo:
          - { path: repo1, sha: ${{ env.sha1 }} }
          - { path: repo2, sha: ${{ env.sha2 }} }
        uses: actions/download-artifact@v4
        with:
          path: ./${{ matrix.repo.path }}
          name: cache-${{ matrix.repo.sha }}-all

      - name: Chmod all .tsk
        strategy:
          matrix:
        repo:
          - repo1
          - repo2
        working-directory: ${{ matrix.repo }}
        run: find ./build -type f -name "*.tsk" -exec chmod +x {} +

      - name: Run Integration Tests
        working-directory: repo1
        env:
          BLAZINGMQ_LEADER_NAME: "EAST2"
          BLAZINGMQ_BROKER_EAST1: "${{ github.workspace }}/repo1/build/blazingmq/src/applications/bmqbrkr/bmqbrkr.tsk"
          BLAZINGMQ_BROKER_EAST2: "${{ github.workspace }}/repo2/build/blazingmq/src/applications/bmqbrkr/bmqbrkr.tsk"
          BLAZINGMQ_BROKER_WEST1: "${{ github.workspace }}/repo1/build/blazingmq/src/applications/bmqbrkr/bmqbrkr.tsk"
          BLAZINGMQ_BROKER_WEST2: "${{ github.workspace }}/repo1/build/blazingmq/src/applications/bmqbrkr/bmqbrkr.tsk"
        run: |
          pip install -r ./src/python/requirements.txt

          ./src/integration-tests/run-tests \
            "${{ matrix.mode }} and ${{ matrix.cluster }} and ${{ matrix.consistency }}" \
            --log-level ERROR                   \
            --log-file-level=info               \
            --bmq-tolerate-dirty-shutdown       \
            --bmq-log-dir=failure-logs          \
            --bmq-log-level=INFO                \
            --junitxml=integration-tests.xml    \
            --tb long                           \
            --reruns=3                          \
            -n logical -v

      - name: Upload failure-logs as artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}_failure_logs_${{ env.RUN_UID }}
          path: ${{ github.workspace }}/src/integration-tests/failure-logs
          retention-days: 5
